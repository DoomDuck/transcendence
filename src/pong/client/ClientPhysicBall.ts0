import { PhysicBall } from "../common";
import { Vector3 } from "three"

export class ClientPhysicBall extends ClientBall {


    deformCollision(distanceVectors: Vector3[]) {
        this.scale.x = 1;
        this.rotation.y = 0;

        if (distanceVectors.length == 0)
            return;
        let distanceVec = distanceVectors.reduce((vecMin, vec) => vecMin.length() < vec.length() ? vecMin : vec);

        let dist = distanceVec.length();
        if (dist < this.radius) {
            let distDir = new Vector3();
            distDir.copy(distanceVec).normalize();
            this.scale.x = dist / this.radius;
            let signY = Math.sign(distanceVec.y)
            this.rotation.y = signY * distanceVec.angleTo(_ux)
        }
    }
}
